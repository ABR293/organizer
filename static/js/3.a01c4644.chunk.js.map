{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/DealTree/Label/Label.jsx","Components/DealTree/Label/LabelHOC.jsx","Components/DealTree/Label/Label.module.css","Components/Common/Buttons/RedactDeal.jsx","Components/Common/Buttons/ShowDescription.jsx","Components/Common/Buttons/MakeDone.jsx","Components/Common/Buttons/DeletDeal.jsx","Components/Common/Buttons/CanceleDone.jsx","Components/RedactWindow/ReductWindow.module.css","Components/RedactWindow/DataChanging.module.css","Components/RedactWindow/DataChenging.jsx","Components/RedactWindow/DataChengingHOC.jsx","Components/Common/Buttons/ShowInCalendar.jsx","Components/Common/Buttons/ShowinCalendarHOC.jsx","Components/RedactWindow/RedactWindow.jsx","Components/DealTree/DealTree.module.css","Components/DealTree/ListMenu/ListMenu.module.css","Components/DealTree/Deals/Deal.module.css","Components/DealTree/Deals/subList.module.css","Components/DealTree/List/List.module.css","Components/DealTree/Label/index.js","Components/Common/Buttons/DeleteList.jsx","Components/DealTree/ListMenu/index.js","Components/DealTree/ListMenu/ListMenu.jsx","Components/Common/Buttons/OpenTree.jsx","Components/Common/Buttons/AddNewDeal.jsx","Components/DealTree/Deals/subList.jsx","Components/RedactWindow/ModalWindow.jsx","Components/DealTree/Deals/Deal.jsx","Components/DealTree/Deals/DealContainer.jsx","Components/DealTree/List/List.jsx","Components/DealTree/List/ListContainer.jsx","Components/DealTree/DealTree.jsx","Components/DealTree/DealTreeContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","LabelHOC","Component","this","props","React","connect","state","changeName","useState","isActiv","setActiv","name","setName","changeActivity","className","style","type","placeholder","onBlur","id","autoFocus","defaultValue","onChange","element","currentTarget","onDoubleClick","module","exports","RedactDeal","onClick","make","aria-hidden","ShowDescription","makeDone","deleteDeal","cancelDone","DataChangingHOC","changeStartDate","changeEndingDate","date","setDate","Date","toLocaleDateString","ShowInCalendarHOC","changeShowInCalendar","isShowInCalendar","isShow","setIsShow","ChangeIsShow","disabled","ThemeStyleHOC","changeDescription","theme","description","setDescription","backdrop","classNames","block","redactWindow","nameBlock","Label","impotance","redactWindow__button","firstDate","startDate","lastDate","endingDate","calendarBTN","redactWindow__disabledButton","descriptionBlock","descriptionBlock__name","descriptionBlock__input","resultBlock","close","e","deleteList","Lists","data","map","list","to","listMenu__item","menuItem","activeClassName","menuItemActive","key","listMenu","listMenu__newItem","addNewList","OpenTree","Click","addNewDeal","SubList","Deals","listBody","deal","isDone","subdeals","children","add","Modal","showSubDeal","setShowSubDeal","changeShowSubDeal","isModalOpen","setModalOpen","toggleModal","isDescriptionOpen","setDescriptionOpen","toggleDescription","dealBlock","ReactDOM","createPortal","RedactWindow","importance","subpropss","document","body","description__block","dealMain","dealMainDone","openBtn","dealName","dealMenu","MakeDone","DeletDeal","subDealsBlock","sadDealsBlockNone","DealContainer","List","bottomPad","ListContainer","match","params","listId","dataP","findIndex","find","ListContainerWithRouter","withRouter","scrollbar","path","render","DealTreeContainer","initData"],"mappings":"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","file":"static/js/3.a01c4644.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState} from 'react';\r\nimport style from \"./Label.module.css\";\r\nimport {LabelHOC} from \"./LabelHOC\";\r\n\r\nconst Label = (props) => {\r\n    let [isActiv, setActiv]=useState(false);\r\n    let [name, setName]  = useState(props.name);\r\n\r\n    let changeActivity = () => {setActiv(!isActiv);};\r\n    let onNameChange = (element) => {\r\n        setName(element.currentTarget.value);\r\n    };\r\n    let updateName = () => {\r\n        props.changeName(props.id, name);\r\n        changeActivity();\r\n    };\r\n\r\n    return(\r\n        isActiv ?\r\n            <input\r\n                className={style.name}\r\n                type=\"text\" placeholder='название'\r\n                onBlur={updateName}\r\n                autoFocus={true}\r\n                defaultValue={name}\r\n                onChange={onNameChange}\r\n            />\r\n            :\r\n            <p className={style.name} onDoubleClick={changeActivity}>{name}</p>\r\n    )\r\n};\r\n\r\nexport default LabelHOC(Label);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {changeName} from \"../../../Redux/DealReducer\";\r\n\r\n\r\n\r\nexport const LabelHOC = (Component) => {\r\n    class LabelHOC extends React.Component{\r\n        render(){\r\n            return(<Component {...this.props} />)\r\n        }\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return { }\r\n    };\r\n    return connect (mapStateToProps, {changeName})(LabelHOC);\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Label_name__1jU22\"};","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst RedactDeal = (props) => {\r\n    return (\r\n        <button\r\n            onClick={props.make}\r\n        >\r\n            <i className=\"fa fa-pencil\" aria-hidden=\"true\"> </i>\r\n        </button>\r\n    )\r\n};\r\nexport default RedactDeal;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nconst ShowDescription = (props) => {\r\n    return (\r\n        <button\r\n            onClick={props.make}\r\n        >\r\n            ?\r\n        </button>\r\n    )\r\n};\r\nexport default ShowDescription;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {connect} from \"react-redux\";\r\nimport {makeDone} from \"../../../Redux/DealReducer\";\r\n\r\n\r\nconst MakeDoneDeal = (props) => {\r\n\r\n    let onclick = () =>\r\n    {props.makeDone(props.id);\r\n        if(props.make){props.make()}\r\n    };\r\n\r\n    return (\r\n        <button\r\n            //className={style.button}\r\n            onClick={onclick}\r\n        >\r\n            <i className=\"fa fa-check\" aria-hidden=\"true\"> </i>\r\n        </button>\r\n    )\r\n};\r\nlet mapStateToProps = () => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, {makeDone})(MakeDoneDeal);\r\n","import React from 'react';\r\nimport {deleteDeal} from \"../../../Redux/DealReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DeletDeal = (props) => {\r\n\r\n    let onclick = () => {props.deleteDeal(props.id)};\r\n\r\n    return (\r\n        <button\r\n            onClick={onclick}\r\n        >\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"> </i>\r\n        </button>\r\n    )\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteDeal})(DeletDeal);","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {connect} from \"react-redux\";\r\nimport {cancelDone} from \"../../../Redux/DealReducer\";\r\n\r\n\r\nconst CancelDoneDeal = (props) => {\r\n\r\n    let onclick = () =>\r\n    {props.cancelDone(props.id);\r\n        if(props.make){props.make()}\r\n    };\r\n\r\n    return (\r\n        <button\r\n            //className={style.button}\r\n            onClick={onclick}\r\n        >\r\n            <i className=\"fa fa-external-link-square\" aria-hidden=\"true\"> </i>\r\n        </button>\r\n    )\r\n};\r\nlet mapStateToProps = () => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, {cancelDone})(CancelDoneDeal);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ReductWindow_backdrop__26T59\",\"block\":\"ReductWindow_block__1ygdn\",\"name\":\"ReductWindow_name__39jy6\",\"nameBlock\":\"ReductWindow_nameBlock__2_cxl\",\"impotance\":\"ReductWindow_impotance__1aXBI\",\"date\":\"ReductWindow_date__1AbJy\",\"firstDate\":\"ReductWindow_firstDate__1CFNv\",\"lastDate\":\"ReductWindow_lastDate__Vn5By\",\"calendarBTN\":\"ReductWindow_calendarBTN__1A4lf\",\"descriptionBlock\":\"ReductWindow_descriptionBlock__3Jx5k\",\"descriptionBlock__name\":\"ReductWindow_descriptionBlock__name__3Hbk5\",\"descriptionBlock__input\":\"ReductWindow_descriptionBlock__input__1cxly\",\"resultBlock\":\"ReductWindow_resultBlock__LIrlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"DataChanging_date__PzzO7\"};","import React, {useState} from 'react';\r\nimport style from \"./DataChanging.module.css\";\r\nimport {DataChangingHOC} from \"./DataChengingHOC\";\r\n\r\nconst DataChanging = (props) => {\r\n    let [isActiv, setActiv]=useState(false);\r\n    let [date, setDate]  = useState(props.date);\r\n\r\n    let changeActivity = () => {\r\n        setActiv(!isActiv);\r\n    };\r\n    let onDateChange = (element) => {\r\n        setDate(element.currentTarget.value);\r\n    };\r\n    let updateDate = () => {\r\n        props.type === \"s\" && props.changeStartDate(props.id, date);\r\n        props.type === \"e\" && props.changeEndingDate(props.id, date);\r\n        changeActivity();\r\n    };\r\n\r\n\r\n\r\n    return(\r\n        isActiv ?\r\n            <input\r\n                className={style.date}\r\n                type=\"date\"\r\n                onBlur={updateDate}\r\n                autoFocus={true}\r\n                defaultValue={date}\r\n                onChange={onDateChange}\r\n            />\r\n            :\r\n            <p className={style.date} onClick={changeActivity}>{date ? new Date(date).toLocaleDateString() : 'NICHT DATA!'}</p>\r\n    )\r\n};\r\n\r\nexport default DataChangingHOC(DataChanging);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {changeEndingDate, changeStartDate} from \"../../Redux/DealReducer\";\r\n\r\n\r\n\r\nexport const DataChangingHOC = (Component) => {\r\n    class DataChangingHOC extends React.Component{\r\n        render(){\r\n            return(<Component {...this.props} />)\r\n        }\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return { }\r\n    };\r\n    return connect (mapStateToProps, {changeStartDate, changeEndingDate})(DataChangingHOC);\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {ShowInCalendarHOC} from \"./ShowinCalendarHOC\";\r\n\r\n\r\nconst ShowInCalendar = (props) => {\r\n\r\n    const [isShow, setIsShow] = useState(props.isShowInCalendar);\r\n    let ChangeIsShow = () => {\r\n        isShow ? setIsShow(false) : setIsShow(true)\r\n    };\r\n    let setShowInCalendar = () => {\r\n        props.changeShowInCalendar(props.id, true);\r\n        ChangeIsShow();\r\n    };\r\n    let canceleShowInCalendar = () => {\r\n        props.changeShowInCalendar(props.id, false);\r\n        ChangeIsShow();\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                props.id ?\r\n                    !isShow ?\r\n                        <button\r\n                            onClick={setShowInCalendar}\r\n                        ><i className=\"fa fa-calendar-check-o\" aria-hidden=\"true\"> </i>\r\n                        </button>\r\n                    :\r\n                        <button\r\n                            onClick={canceleShowInCalendar}\r\n                        ><i className=\"fa fa-calendar-times-o\" aria-hidden=\"true\"> </i>\r\n                        </button>\r\n                :\r\n                    <button\r\n                        disabled='disabled'\r\n                    > <i className=\"fa fa-calendar-times-o\" aria-hidden=\"true\"> </i>\r\n                    </button>\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default ShowInCalendarHOC(ShowInCalendar);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {changeShowInCalendar} from \"../../../Redux/DealReducer\";\r\n//import {addNewDeal} from \"../../../Redux/DealReducer\";\r\n\r\n\r\n\r\nexport const ShowInCalendarHOC = (Component) => {\r\n    class ShowInCalendarHOC extends React.Component{\r\n        render(){\r\n            return(<Component {...this.props} />)\r\n        }\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n        }\r\n    };\r\n    return connect (mapStateToProps, {changeShowInCalendar})(ShowInCalendarHOC);\r\n};\r\n","\r\nimport React, {useState} from 'react';\r\nimport style from './ReductWindow.module.css'\r\nimport classNames from \"classnames\";\r\nimport {ThemeStyleHOC} from \"../Common/ThemeStyleHoc\";\r\nimport DataChanging from \"./DataChenging\";\r\n//import {setShowInCalendar} from \"../../Redux/DealReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport ShowInCalendar from \"../Common/Buttons/ShowInCalendar\";\r\nimport Label from \"../DealTree/Label/Label\";\r\nimport {changeDescription} from \"../../Redux/DealReducer\";\r\n\r\nconst RedactWindow = (props) => {\r\n\r\n    let theme = props.theme;\r\n\r\n    let close = () => {props.close()};\r\n\r\n\r\n    let [isActiv, setActiv]=useState(false);\r\n    let [description, setDescription]  = useState(props.description);\r\n\r\n    let changeActivity = () => {setActiv(!isActiv);};\r\n    let onDescriptionChange = (element) => {\r\n        setDescription(element.currentTarget.value);\r\n    };\r\n    let updateDescription = () => {\r\n        props.changeDescription(props.id, description);\r\n        changeActivity();\r\n    };\r\n\r\n\r\n    return(\r\n        <div className={style.backdrop}>\r\n            <div className={classNames(style.block, theme.redactWindow)}>\r\n                <p className={style.name}>Name</p>\r\n                <div className={style.nameBlock}>\r\n                    <Label\r\n                        name={props.name}\r\n                        id={props.id}\r\n                    />\r\n                </div>\r\n                <div className={classNames(style.impotance, theme.redactWindow__button)}>\r\n                    <button>!</button>\r\n                </div>\r\n                <p className={style.date}>Data</p>\r\n                <div className={style.firstDate}><DataChanging id={props.id} date={props.startDate} type={'s'}/></div>\r\n                <div className={style.lastDate}><DataChanging id={props.id} date={props.endingDate} type={'e'}/></div>\r\n                {/*<button className={style.calendarBTN} onClick={ShCal}>SC</button>*/}\r\n                <div className={classNames(style.calendarBTN,\r\n                    (props.startDate && props.endingDate) ? theme.redactWindow__button : theme.redactWindow__disabledButton)}\r\n                >\r\n                    {(props.startDate && props.endingDate) ?\r\n                        <ShowInCalendar\r\n                            id={props.id}\r\n                            isShowInCalendar={props.isShowInCalendar}\r\n                        />\r\n                        :\r\n                        <ShowInCalendar\r\n                            isShowInCalendar={props.isShowInCalendar}\r\n                        />\r\n\r\n                    }\r\n                </div>\r\n\r\n                <div className={style.descriptionBlock}>\r\n                    <p className={style.descriptionBlock__name}>Description</p>\r\n                    <textarea\r\n                        className={style.descriptionBlock__input}\r\n                        defaultValue={props.description}\r\n                        onChange={onDescriptionChange}\r\n                        onBlur={updateDescription}\r\n                        //onBlur={}\r\n                    />\r\n                </div>\r\n                <div className={classNames(style.resultBlock, theme.redactWindow__button)}>\r\n                    <button onClick={close}>Ok</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { }\r\n};\r\n\r\n\r\nexport default ThemeStyleHOC( connect(mapStateToProps, {changeDescription})(RedactWindow));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"DealTree_block__1rl_h\",\"list\":\"DealTree_list__Dd1dB\",\"listMenu\":\"DealTree_listMenu__2TZIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listMenu__newItem\":\"ListMenu_listMenu__newItem__1v3ks\",\"listMenu__item\":\"ListMenu_listMenu__item__1fofu\",\"listMenu\":\"ListMenu_listMenu__3-XrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"openBtn\":\"Deal_openBtn__1w_zp\",\"dealMenu\":\"Deal_dealMenu__2qWy0\",\"dealBlock\":\"Deal_dealBlock__BRXee\",\"dealMain\":\"Deal_dealMain__1Zb--\",\"subDealsBlock\":\"Deal_subDealsBlock__3Nww8\",\"sadDealsBlockNone\":\"Deal_sadDealsBlockNone__3CNqk\",\"dealName\":\"Deal_dealName__NRuaL\",\"description\":\"Deal_description__1ydZ2\",\"description__block\":\"Deal_description__block__3PJAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"subList_list__1P_By\",\"add\":\"subList_add__atsv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__QVcyR\",\"add\":\"List_add__761xK\",\"bottomPad\":\"List_bottomPad__3O3DE\"};","import e from './Label';\r\nexport default e;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteList} from \"../../../Redux/DealReducer\";\r\n\r\nconst DeleteList = (props) => {\r\n\r\n    let onclick = () => {props.deleteList(props.id)};\r\n\r\n    return (\r\n        <button\r\n            onDoubleClick={onclick}\r\n        >\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"> </i>\r\n        </button>\r\n    )\r\n};\r\nlet mapStateToProps = (state) => {\r\n    return {}\r\n};\r\nexport default connect(mapStateToProps, {deleteList})(DeleteList);","import e from './ListMenu.jsx';\r\nexport default e;","import React from 'react';\r\nimport style from \"./ListMenu.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Label from \"../Label\";\r\nimport {deleteList} from \"../../../Redux/DealReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport DeleteList from \"../../Common/Buttons/DeleteList\";\r\nimport classNames from \"classnames\";\r\nimport {ThemeStyleHOC} from \"../../Common/ThemeStyleHoc\";\r\n\r\n\r\nconst ListMenu = (props) => {\r\n\r\n    let theme = props.theme;\r\n    let Lists = props.data.map((list)=>{\r\n        return(\r\n                <NavLink\r\n                    to={'/dealtree/'+ list.id}\r\n                    className={classNames(style.listMenu__item, theme.menuItem)}\r\n                    activeClassName={classNames(style.listMenu__item, theme.menuItemActive)}\r\n                    key={list.id}\r\n                    id={list.id}\r\n                >\r\n                    <Label name={list.name} id={list.id}/>\r\n                    <DeleteList id={list.id}/>\r\n                </NavLink>\r\n            )\r\n    });\r\n    return(\r\n        <div className={style.listMenu}>\r\n            {Lists}\r\n            <span className={classNames(style.listMenu__newItem, theme.menuItem)} onClick={props.addNewList} > <p>+</p> </span>\r\n        </div>\r\n    )\r\n};\r\nlet mapStateToProps = () => {\r\n    return{}\r\n};\r\n\r\nexport default ThemeStyleHOC(connect(mapStateToProps, {deleteList})(ListMenu));","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\nconst OpenTree = (props) => {\r\n\r\n    let Click = () => {\r\n        props.make();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!props.isShow ?\r\n                <button\r\n                    onClick={Click}\r\n                ><i className=\"fa fa-play\" aria-hidden=\"true\"> </i>\r\n                </button>\r\n                :\r\n                <button\r\n                    onClick={Click}\r\n                ><i className=\"fa fa-play fa-rotate-90\" aria-hidden=\"true\"> </i>\r\n                </button>}\r\n        </>\r\n    )\r\n};\r\nexport default OpenTree;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addNewDeal} from \"../../../Redux/DealReducer\";\r\n\r\n\r\nconst AddNewDeal = (props) => {\r\n\r\n    let onclick = () =>\r\n    {props.addNewDeal(props.id);\r\n     if(props.make){props.make()}\r\n    };\r\n    return (\r\n\r\n        <button\r\n            //className={style.button}\r\n            onClick={onclick}\r\n        >\r\n            +\r\n        </button>\r\n    )\r\n};\r\nlet mapStateToProps = () => {\r\n    return {}\r\n};\r\n\r\nexport default connect(mapStateToProps, {addNewDeal})(AddNewDeal);\r\n","import React from 'react';\r\nimport DealContainer from \"../Deals/DealContainer\";\r\nimport AddNewDeal from \"../../Common/Buttons/AddNewDeal\";\r\nimport style from \"./subList.module.css\"\r\n\r\nconst SubList = (props) => {\r\n\r\n\r\n    let Deals = props.listBody.map((deal) => {\r\n        return (\r\n            <DealContainer\r\n                key={deal.id}\r\n                id={deal.id}\r\n                name={deal.name}\r\n                isDone={deal.done}\r\n                subdeals={deal.children}\r\n            />\r\n        )\r\n    });\r\n    return (\r\n        <div className={style.list}>\r\n            <div>\r\n                {Deals}\r\n            </div>\r\n            <div className={style.add}>\r\n                <p>Add New Deal</p>\r\n                <AddNewDeal id={props.id}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n//let  withRouterList = withRouter(List);\r\n\r\nexport default SubList;","import React from 'react';\r\n\r\n\r\nexport default class Modal extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './Deal.module.css'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport RedactDeal from \"../../Common/Buttons/RedactDeal\";\r\nimport ShowDescription from \"../../Common/Buttons/ShowDescription\";\r\nimport MakeDoneDeal from \"../../Common/Buttons/MakeDone\";\r\nimport OpenTree from \"../../Common/Buttons/OpenTree\";\r\nimport AddNewDeal from \"../../Common/Buttons/AddNewDeal\";\r\nimport Label from \"../Label\";\r\nimport DeletDeal from \"../../Common/Buttons/DeletDeal\";\r\nimport CancelDoneDeal from \"../../Common/Buttons/CanceleDone\";\r\nimport SubList from \"./subList\";\r\nimport classNames from \"classnames\";\r\nimport {ThemeStyleHOC} from \"../../Common/ThemeStyleHoc\";\r\nimport RedactWindow from \"../../RedactWindow/RedactWindow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DealContainer from \"../List/List\";\r\nimport Modal from \"../../RedactWindow/ModalWindow\";\r\n\r\n\r\nconst Deal = (props) => {\r\n    let ShowS = () => {console.log(showSubDeal)};\r\n\r\n    let [showSubDeal, setShowSubDeal] = useState(false);\r\n\r\n    let changeShowSubDeal = () =>{\r\n        showSubDeal ? setShowSubDeal(false) : setShowSubDeal(true)\r\n    };\r\n\r\n    let [isModalOpen, setModalOpen] = useState(false);\r\n\r\n    let toggleModal = () => {setModalOpen(!isModalOpen)};\r\n\r\n    let [isDescriptionOpen, setDescriptionOpen] = useState(false);\r\n\r\n    let toggleDescription = () => {setDescriptionOpen(!isDescriptionOpen)};\r\n\r\n    let theme = props.theme;\r\n\r\n    return (\r\n        <div className={style.dealBlock}>\r\n            <div>\r\n                {isModalOpen && ReactDOM.createPortal(\r\n                        <Modal>\r\n                            <RedactWindow\r\n                                close={toggleModal}\r\n                                id={props.id}\r\n                                name={props.name}\r\n                                isDone={props.done}\r\n                                description= {props.description}\r\n                                importance={props.importance}\r\n                                startDate={props.startDate}\r\n                                endingDate={props.endingDate}\r\n                                isShowInCalendar={props.isShowInCalendar}\r\n                                subpropss={props.children}\r\n                            />\r\n                        </Modal>\r\n                        ,\r\n                        document.body\r\n                    )}\r\n            </div>\r\n            {props.description &&<div>\r\n                {isDescriptionOpen && ReactDOM.createPortal(\r\n                    <Modal>\r\n                        <div\r\n                            className={style.description}\r\n                            onClick={toggleDescription}\r\n                        >\r\n                            <div className={classNames(style.description__block, theme.redactWindow)}>\r\n                                <p>{props.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    ,\r\n                    document.body\r\n                )}\r\n            </div>}\r\n            <div className={!props.isDone ? classNames(style.dealMain, theme.dealMain) :classNames(style.dealMain, theme.dealMainDone)} >\r\n                <div className={style.openBtn}>\r\n                    {\r\n                        props.subdeals.length === 0 ?\r\n                        <AddNewDeal id ={props.id} make={changeShowSubDeal}\r\n                        /> :\r\n                        <OpenTree make={changeShowSubDeal} isShow={showSubDeal}/>\r\n                    }\r\n                </div>\r\n                <div className={style.dealName}>\r\n                    <Label\r\n                        name={props.name}\r\n                        id={props.id}\r\n                    />\r\n                </div>\r\n                <div className={style.dealMenu}>\r\n                    {! props.isDone ? <RedactDeal make={toggleModal}/> : <RedactDeal disabled='disabled'/>}\r\n                    {! props.isDone && props.description ? <ShowDescription make={toggleDescription}/> : <ShowDescription disabled='disabled'/>}\r\n                    {! props.isDone ? <MakeDoneDeal id={props.id}/> : <CancelDoneDeal id={props.id}/>}\r\n                    <DeletDeal id={props.id}/>\r\n                </div>\r\n            </div>\r\n             <div  className={showSubDeal ? classNames(style.subDealsBlock, theme.subDealsBlock): style.sadDealsBlockNone}>\r\n                 {props.subdeals.length === 0 ? null : <SubList id={props.id} listBody={props.subdeals}/>}\r\n               </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ThemeStyleHOC(Deal);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Deal from \"./Deal\";\r\nimport {addNewDeal, changeName} from \"../../../Redux/DealReducer\";\r\n\r\n\r\n\r\n\r\nclass DealContainer extends React.Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Deal\r\n                name = {this.props.name}\r\n                id = {this.props.id}\r\n                subdeals = {this.props.subdeals}\r\n                addNewDeal = {this.props.addNewDeal}\r\n                changeName = {this.props.changeName}\r\n                isDone = {this.props.isDone}\r\n                description= {this.props.description}\r\n                importance={this.props.importance}\r\n                startDate={this.props.startDate}\r\n                endingDate={this.props.endingDate}\r\n                isShowInCalendar={this.props.isShowInCalendar}\r\n                subpropss={this.props.children}\r\n            />\r\n            )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { }\r\n};\r\n\r\nexport default connect(mapStateToProps,{changeName,addNewDeal,})(DealContainer);","import React from 'react';\r\nimport DealContainer from \"../Deals/DealContainer\";\r\nimport AddNewDeal from \"../../Common/Buttons/AddNewDeal\";\r\nimport style from \"./List.module.css\"\r\n\r\nconst List = (props) => {\r\n\r\n    let Deals=[];\r\n    if (props.listBody) {Deals = props.listBody.map((deal) => {\r\n        return (\r\n            <DealContainer\r\n                key={deal.id}\r\n                id={deal.id}\r\n                name={deal.name}\r\n                isDone={deal.done}\r\n                description= {deal.description}\r\n                importance={deal.importance}\r\n                startDate={deal.startDate}\r\n                endingDate={deal.endingDate}\r\n                isShowInCalendar={deal.isShowInCalendar}\r\n                subdeals={deal.children}\r\n            />\r\n        )\r\n    })}\r\n    return (\r\n        <div className={style.list}>\r\n            <div>\r\n               {Deals}\r\n            </div>\r\n            <div className={style.add}>\r\n                <p>Add New Deal</p>\r\n                <AddNewDeal id={props.id}/>\r\n            </div>\r\n            <div className={style.bottomPad}> </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n//let  withRouterList = withRouter(List);\r\n\r\nexport default List;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport List from \"./List\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ListContainer extends React.Component{\r\n\r\n    render(){\r\n        let id;\r\n        if(this.props.match.params.listId){id = this.props.match.params.listId}\r\n        if(this.props.dataP.findIndex(list => list.id === id) === -1){id = this.props.dataP[0].id}\r\n\r\n            let list = this.props.dataP.find(list => list.id === id);\r\n        return(\r\n            <List\r\n                id={id}\r\n                listBody={list.children}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet ListContainerWithRouter = withRouter(ListContainer);\r\nexport default ListContainerWithRouter;","import React from 'react';\r\nimport style from './DealTree.module.css'\r\nimport {Route} from \"react-router-dom\";\r\nimport ListMenu from \"./ListMenu\";\r\nimport ListContainer from \"./List/ListContainer\";\r\nimport classNames from \"classnames\";\r\nimport {ThemeStyleHOC} from \"../Common/ThemeStyleHoc\";\r\n\r\n\r\nconst DealTree = (props) => {\r\n    let theme = props.theme;\r\n    return (\r\n        <div className={classNames(style.block, theme.scrollbar)}>\r\n            <div className={style.list}>\r\n                <Route path={'/dealtree/:listId?'}\r\n                       render={() => <ListContainer dataP={props.data}/>}\r\n                />\r\n            </div>\r\n\r\n            <div className={style.listMenu}>\r\n                <ListMenu data={props.data} addNewList={props.addNewList} changeName={props.changeName}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ThemeStyleHOC(DealTree);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport DealTree from \"./DealTree\";\r\nimport {addNewList, changeName, deleteDeal, initData} from \"../../Redux/DealReducer\";\r\n\r\n\r\nclass DealTreeContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DealTree\r\n                    data={this.props.data}\r\n                    addNewList={this.props.addNewList}\r\n                    changeName={this.props.changeName}\r\n                />\r\n            </>)\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addNewList, changeName, initData, deleteDeal})(DealTreeContainer);\r\n"],"sourceRoot":""}